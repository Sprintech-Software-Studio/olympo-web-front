<script>
    import { IconChevronLeft, IconInputCheck } from "@tabler/icons-svelte";
    import { onMount } from 'svelte';
    import { selectedExerciseId } from '../storelinks.ts';

    let exercises = [];
    let exercise = { id: null, name: '', description: '', imagePath: '' }; 
    let error = null;
    let message = '';
    let ima../storelinks.js
    let videoPath = null;

    const handleSubmit = async (event) => {
    event.preventDefault();

    const formData = new FormData();
    formData.append('id', exercise.id);
    formData.append('name', exercise.name);
    formData.append('description', exercise.description);

    if (imagePath?.[0]) { 
        formData.append('image', imagePath[0]);
    }

    if (videoPath?.[0]) { 
        formData.append('video', videoPath[0]);
    }

    try {
        const response = await fetch(`http://localhost:5217/api/exercise/${exercise.id}`, {
            method: 'PUT',
            body: formData,
        });

        if (response.ok) {
            const result = await response.json();
            message = 'Exercício atualizado com sucesso!';
            console.log(result);

            setTimeout(() => {
                window.location.href = '/adm/exercises';
            }, 500);
        } else {
            message = 'Erro ao atualizar exercício.';
            console.log(response);
        }
    } catch (error) {
        message = 'Erro de requisição: ' + error.message;
    }
};

    async function fetchExercises() {
        try {
            let exerciseId;
            selectedExerciseId.subscribe(value => {
                exerciseId = value;
            });

            if (!exerciseId) {
                throw new Error('ID do exercício não encontrado');
            }

            const response = await fetch(`http://localhost:5217/api/exercise/${exerciseId}`);
            if (!response.ok) {
                throw new Error(`Erro: ${response.statusText}`);
            }
            exercise = await response.json();
            console.log(exercise);
        } catch (err) {
            error = err.message;
        }
    }

    onMount(() => {
        fetchExercises();
    });
</script>

<section class="w-full min-h-screen flex flex-col items-start py-4 px-8 gap-4 bg-[#2c2c2c] font-karantina uppercase">
    <header id="head" class="w-full">
        <div class="flex justify-between">
            <a href="/home" class="bg-[#2c2c2c] p-2 rounded-full border border-zinc-600" aria-label="Voltar para o início">
                <IconChevronLeft color="#facc15" />
            </a>
        </div>
    </header>

    <main class="w-full flex flex-col gap-8">
        <div id="exercicios" class="w-full text-white">
            <h2 class="text-4xl mt-4 mb-4">Editar Exercícios</h2>

            <form on:submit={handleSubmit} class="flex flex-col gap-4">
                <div class="flex flex-col gap-2">
                    <label for="name" class="text-2xl">Nome do exercício</label>
                    <input 
                        type="text" 
                        bind:value={exercise.name} 
                        id="name" 
                        class="w-full p-4 rounded-xl bg-[#2c2c2c] text-white" 
                        placeholder="Digite o nome do exercício" 
                        required
                    />
                </div>
            
                <div class="flex flex-col gap-2">
                    <label for="description" class="text-2xl">Descrição</label>
                    <textarea 
                        bind:value={exercise.description} 
                        id="description" 
                        class="w-full p-4 rounded-xl bg-[#2c2c2c] text-white" 
                        placeholder="Descreva o exercício" 
                        rows="4" 
                        required
                    ></textarea>
                </div>

                <!-- <div class="flex flex-col gap-2">
                    <label for="day" class="text-2xl">Dia de execução</label>
                    <select 
                        bind:value={exercise.day} 
                        id="day" 
                        class="w-full p-4 rounded-xl bg-[#2c2c2c] text-white" 
                        required
                    >
                        <option value="" disabled selected>Selecione o dia do exercício</option>
                        <option value="Domingo">Segunda-feira</option>
                        <option value="Segunda">Terça-feira</option>
                        <option value="Terca">Quarta-feira</option>
                        <option value="Quarta">Quinta-feira</option>
                        <option value="Quinta">Sexta-feira</option>
                        <option value="Sexta">Sábado</option>
                        <option value="Sabado">Domingo</option>
                    </select>
                </div> -->
                
            
                <div class="flex flex-col gap-2">
                    <label for="image" class="text-2xl">Imagem</label>
                    <img 
                        src={`http://localhost:5217/api/Files/${exercise.imagePath}`} 
                        alt="Imagem do exercício" 
                        class="w-full h-44 object-cover rounded-xl"
                    />
                    <input 
                        type="file" 
                        bind:files={imagePath} 
                        id="image" 
                        name="imagePath" 
                        class="w-full p-4 rounded-xl bg-[#2c2c2c] text-white" 
                    />
                </div>

                <div class="flex flex-col gap-2">
                    <label for="video" class="text-2xl">Video</label>
                    <img 
                        src={`http://localhost:5217/api/Files/${exercise.videoPath}`} 
                        alt="Vídeo do exercício" 
                        class="w-full h-44 object-cover rounded-xl"
                    />
                    <input 
                        type="file"
                        bind:files={videoPath}  
                        id="video" 
                        name="videoPath" 
                        class="w-full p-4 rounded-xl bg-[#2c2c2c] text-white" 
                    />
                </div>
            
                <button 
                    type="submit" 
                    class="flex items-center justify-center p-4 rounded-xl bg-[#facc15] text-black mt-4"
                >
                    <IconInputCheck size="32" color="#2c2c2c" />
                    <span class="text-2xl ml-1">Atualizar</span>
                </button>
            
                {#if message}
                    <p>{message}</p>
                {/if}
            </form>
        </div>
    </main>
</section>
